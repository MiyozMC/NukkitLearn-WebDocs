import{_ as i,c as a,o as n,ae as p}from"./chunks/framework.CgiyRsxg.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"章外篇/章外篇之一-用指令设置玩家实体大小(简单版).md","filePath":"章外篇/章外篇之一-用指令设置玩家实体大小(简单版).md"}'),l={name:"章外篇/章外篇之一-用指令设置玩家实体大小(简单版).md"};function t(h,s,k,e,E,r){return n(),a("div",null,[...s[0]||(s[0]=[p(`<h2 id="nukkitlearn章外篇之-用指令设置玩家实体大小-简单版" tabindex="-1">Nukkitlearn章外篇之---用指令设置玩家实体大小（简单版） <a class="header-anchor" href="#nukkitlearn章外篇之-用指令设置玩家实体大小-简单版" aria-label="Permalink to &quot;Nukkitlearn章外篇之---用指令设置玩家实体大小（简单版）&quot;">​</a></h2><p>本章外篇教程由zsy制作，本教程非常的简单，目的是为萌新们打开一个很好的思路 如果你对本篇有任何合理地建议或者疑问，可以联系笔者QQ:910223023，笔者高三 可能回复不会及时，但看到后一定处理。</p><ol><li><p>首先你需要按照章内的教程，创建一个项目，名称随意，我这里用的SetSize。配置好一系列的东西并创建好plugin.yml后，可以开始了。</p></li><li><p>这是我的plugin.yml中的内容</p></li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    name: SetSize</span></span>
<span class="line"><span>    main: xyz.zsy.SetSize.SetSize</span></span>
<span class="line"><span>    version: &quot;1.0.0&quot;</span></span>
<span class="line"><span>    api: [&quot;1.0.0&quot;]</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    load: POSTWORLD</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    author: zsy</span></span>
<span class="line"><span>    website: xyz.zsy</span></span></code></pre></div><p>这里再次强调一个坑，main中的路径应是主类的所在的位置，<em><strong>精确到文件名</strong></em>，我这里xyz.zsy.SetSize.SetSize的意思是xyz\\zsy\\SetSize目录下的SetSize.java,读者应该根据自己的包和主类名字修改！否则Nukkit不会加载到插件的主类，插件是无法运行的，因为Nukkit无从下手。</p><p>3.之后在主类中添加内容，添加的内容如下</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onCommand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CommandSender sender, Command command, String label, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] args) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (command.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//判断斜杠后的指令名字 /ss，用法/ss 玩家名字 大小</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (sender </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">instanceof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Player) {  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//判断发令者是否是玩家</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (args.length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//判断指令/ss 后是否有参数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    Player p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPlayer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//获取/ss 后的第一个参数，应该是String类</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (args.length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//同上 判断是否有第二个参数 也就是是否有 大小 这个参数，应该是个数字</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        Float size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parseFloat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//获取大小，并将它转化为Float型，因为Nukkit中设置实体大小的方法，参数要求是Float</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        p.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setScale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(size); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//调用setScale()方法来设置玩家大小</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre></div><p>4.不要忘了在plugin.yml加入权限组，不然这个指令将会是非法的。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">commands</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ss</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Set A Player&#39;s Size.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    usage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/ss [name] [size]&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    permission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SetSize.ss</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">permissions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  SetSize.ss</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">op</span></span></code></pre></div><p>5.检查没有丢步骤后，就可以编译并且测试了！ 当然，设置的玩家大小，当玩家重新进入服务器或者死亡重生后将会变为正常大小，因为本篇设置的只是一个临时变量，实体消失后它也会一起被清理，如果想要永久的保存，则可以利用config储存下来大小，然后在进服和复活事件中进行设置，感兴趣的可以进一步咨询笔者，那么本教程就到此结束了！祝你在胜利之地越战越勇！</p>`,10)])])}const y=i(l,[["render",t]]);export{g as __pageData,y as default};
