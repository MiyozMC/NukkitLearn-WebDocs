import{_ as l,c as e,o as t,ae as n}from"./chunks/framework.CgiyRsxg.js";const g=JSON.parse('{"title":"第三章 第一节 主要的Form种类及介绍","description":"","frontmatter":{},"headers":[],"relativePath":"第三章/3-1_主要的Form种类及介绍.md","filePath":"第三章/3-1_主要的Form种类及介绍.md"}'),r={name:"第三章/3-1_主要的Form种类及介绍.md"};function i(m,o,s,d,c,p){return t(),e("div",null,[...o[0]||(o[0]=[n('<h1 id="第三章-第一节-主要的form种类及介绍" tabindex="-1">第三章 第一节 主要的Form种类及介绍 <a class="header-anchor" href="#第三章-第一节-主要的form种类及介绍" aria-label="Permalink to &quot;第三章 第一节 主要的Form种类及介绍&quot;">​</a></h1><p>参与编写者：<code>iGxnon</code></p><h4 id="建议学习时间-10分钟" tabindex="-1">建议学习时间：10分钟 <a class="header-anchor" href="#建议学习时间-10分钟" aria-label="Permalink to &quot;建议学习时间：10分钟&quot;">​</a></h4><p><strong>学习要点：了解三个主要的Form及其各组件</strong></p><p>UI是用户与程序交互的图形界面，Form则是Nukkit在UI方面上的一个呈现方式——<strong>表格</strong>。而这些可以被叫做三层架构中的<strong>表示层</strong>，用于接收用户传来的数据，并传递给<strong>业务逻辑层</strong>，最终可能会被写入<strong>持久层(配置文件)</strong>。</p><p>Nukkit提供了三种Form以及一些组件。正由于这些简单的表格配合组件，使得Nukkit的UI图形交互界面变得十分好写！</p><p>这一节我们不解析代码，只给学者提供一个思路，具体创建代码看下一节</p><p>所有组件和Form位置均在<code>cn.nukkit.form</code>包下</p><p>一. 三种Form</p><ol><li><strong>Simple_Form</strong><ul><li>特点：这种表格只能放入<strong>按钮</strong>这一种组件</li><li>作用：主要用于做各种表格之间的跳转，点击执行命令等操作</li><li>位置 <code>cn.nukkit.form.window.FormWindowSimple</code></li></ul></li><li><strong>Custom_Form</strong><ul><li>特点: 这种表格可以放入<strong>除了按钮</strong>以外的组件，不能设置content（可通过label这一组件弥补）</li><li>作用: 接收用户传入的各种数据类型（字符串，布尔，数），用于传输数据</li><li>位置 <code>cn.nukkit.form.window.FormWindowCustom</code></li></ul></li><li><strong>Modal_Form</strong><ul><li>特点: 这种表格<strong>只能放入两个按钮(不能带有图片)</strong></li><li>作用: 专门用于接收用户传入的布尔类型(true or false)，常见于一些确认界面中</li><li>位置 <code>cn.nukkit.form.window.FormWindowModal</code></li></ul></li></ol><p>以上的三种Form各自对应着自己的一个FormResponse，例如FormWindowSimple -&gt; FormResponseSimple</p><p>FormResponse：接收玩家交互后传入的数据（例如玩家摁了哪个按钮），用于做数据传输或者处理</p><p>二. 组件</p><ol><li><strong>Button</strong>（按钮） <ul><li>特点：只能被放入Simple类型的Form中，可以传入图片</li><li>位置 <code>cn.nukkit.form.element.ElementButton</code></li></ul></li><li><strong>Dropdown</strong>（下滑块） <ul><li>特点：点击弹出一个下滑块列表，可供用户从有限的<strong>备选类型</strong>中选取一个</li><li>位置 <code>cn.nukkit.form.element.ElementDropdown</code></li></ul></li><li><strong>Input</strong> （文本输入框） <ul><li>特点：用户可以在框中键入一些字符串</li><li>位置 <code>cn.nukkit.form.element.ElementInput</code></li></ul></li><li><strong>Label</strong> （标签） <ul><li>特点：作用类似于content，在表格内添加一个文本标签</li><li>位置 <code>cn.nukkit.form.element.ElementLabel</code></li></ul></li><li><strong>Slider</strong> （水平滑块_1） <ul><li>特点：设置最小值和最大值后，可以滑动滑块获得一个数值（类似进度条）</li><li>位置 <code>cn.nukkit.form.element.ElementSlider</code></li></ul></li><li><strong>StepSlider</strong>（水平滑块_2） <ul><li>特点：类似于Dropdown，只不过将下滑块改成水平滑块</li><li>位置 <code>cn.nukkit.form.element.ElementStepSlider</code></li></ul></li><li><strong>Toggle</strong>（开关） <ul><li>特点：可以接受布尔值</li><li>位置 <code>cn.nukkit.form.element.ElementToggle</code></li></ul></li></ol><p>三. 创建流程</p><p><strong>上面我们已经学习到了三种Form和组件，现在就来讲一讲它们的创建流程:</strong></p><p>发送一个Form</p><ul><li>实例化一种Form ——&gt; 设置标题(Title)和内容(content，Custom类型除外) ——&gt; 添加能加入的组件 ——&gt; 将Form发送给玩家</li></ul><p>接受玩家对Form的交互信息</p><ul><li>监听<code>PlayerFormRespondedEvent</code> ——&gt; 获取到FormResponse ——&gt; 分析FormResponse中返回的交互数据 ——&gt; 将数据进一步传输或者直接判断处理</li></ul>',20)])])}const a=l(r,[["render",i]]);export{g as __pageData,a as default};
