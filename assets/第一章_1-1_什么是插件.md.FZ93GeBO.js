import{_ as n,c as s,o as e,ae as p}from"./chunks/framework.CgiyRsxg.js";const k=JSON.parse('{"title":"第一章 第一节 什么是插件","description":"","frontmatter":{},"headers":[],"relativePath":"第一章/1-1_什么是插件.md","filePath":"第一章/1-1_什么是插件.md"}'),t={name:"第一章/1-1_什么是插件.md"};function i(l,a,o,c,r,d){return e(),s("div",null,[...a[0]||(a[0]=[p(`<h1 id="第一章-第一节-什么是插件" tabindex="-1">第一章 第一节 什么是插件 <a class="header-anchor" href="#第一章-第一节-什么是插件" aria-label="Permalink to &quot;第一章 第一节 什么是插件&quot;">​</a></h1><p>参与编写者: smartcmd</p><h4 id="建议学习时间-50分钟" tabindex="-1">建议学习时间: 50分钟 <a class="header-anchor" href="#建议学习时间-50分钟" aria-label="Permalink to &quot;建议学习时间: 50分钟&quot;">​</a></h4><h5 id="学习要点-了解nukkit插件结构-以及nukkit是如何加载它们的" tabindex="-1">学习要点: 了解nukkit插件结构，以及nukkit是如何加载它们的 <a class="header-anchor" href="#学习要点-了解nukkit插件结构-以及nukkit是如何加载它们的" aria-label="Permalink to &quot;学习要点: 了解nukkit插件结构，以及nukkit是如何加载它们的&quot;">​</a></h5><p>1.nukkit插件结构:</p><p>一个完整的nk插件，它至少要包含以下2个部分:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> plugin.yml</span></span>
<span class="line"><span>        (包含了这个插件的基本信息，其中必须包含:</span></span>
<span class="line"><span>        name: FirstPlugin             # nukkit运行时识别的插件名</span></span>
<span class="line"><span>        main: net.noyark.www.Example  # 主类名称</span></span>
<span class="line"><span>        version: &quot;0.0.1&quot;              # 版本号</span></span>
<span class="line"><span>        author: 你的名字，这里指作者名称</span></span>
<span class="line"><span>        api: [&quot;1.0.8&quot;]                # 早期nukkit api为1.0.0，</span></span>
<span class="line"><span>                                      # 目前大概为1.0.8</span></span>
<span class="line"><span>        description: My first plugin  #介绍)</span></span>
<span class="line"><span> 继承于PluginBase的主类</span></span></code></pre></div><p>如果插件缺失以上部分的任意部分，nk将无法加载此插件</p><p>2.nukkit的插件加载流程</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>   1.读取插件主类（load阶段）调用主类的load()方法</span></span>
<span class="line"><span>   2.启用插件（enable阶段）调用主类的enable()方法</span></span></code></pre></div><p>建议将插件的初始化流程放在enable方法下，load方法被调用时nk本身还未完成启动，此时进行一些操作（例如获取level）很容易出现空指针</p>`,11)])])}const h=n(t,[["render",i]]);export{k as __pageData,h as default};
