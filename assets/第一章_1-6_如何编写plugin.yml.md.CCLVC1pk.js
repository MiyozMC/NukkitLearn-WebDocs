import{_ as i,c as a,o as n,ae as p}from"./chunks/framework.CgiyRsxg.js";const o=JSON.parse('{"title":"第一章 第六节 如何编写plugin.yml","description":"","frontmatter":{},"headers":[],"relativePath":"第一章/1-6_如何编写plugin.yml.md","filePath":"第一章/1-6_如何编写plugin.yml.md"}'),l={name:"第一章/1-6_如何编写plugin.yml.md"};function t(e,s,h,k,r,d){return n(),a("div",null,[...s[0]||(s[0]=[p(`<h1 id="第一章-第六节-如何编写plugin-yml" tabindex="-1">第一章 第六节 如何编写plugin.yml <a class="header-anchor" href="#第一章-第六节-如何编写plugin-yml" aria-label="Permalink to &quot;第一章 第六节 如何编写plugin.yml&quot;">​</a></h1><p>参与编写者: SmallasWater MagicLu550</p><h4 id="建议学习时间-10分钟" tabindex="-1">建议学习时间: 10分钟 <a class="header-anchor" href="#建议学习时间-10分钟" aria-label="Permalink to &quot;建议学习时间: 10分钟&quot;">​</a></h4><h5 id="学习要点-了解plugin-yml内容" tabindex="-1">学习要点: 了解plugin.yml内容 <a class="header-anchor" href="#学习要点-了解plugin-yml内容" aria-label="Permalink to &quot;学习要点: 了解plugin.yml内容&quot;">​</a></h5><ol><li>关于plugin.yml</li></ol><p>plugin.yml 是 nukkit加载插件的主要文件 在加载插件前必先加载plugin.yml</p><ol start="2"><li>plugin.yml构成</li></ol><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">FirstPlugin</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">             # nukkit运行时识别的插件名</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">net.noyark.www.Example</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 主类名称,不能以cn.nukkit开头</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.0.1&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              # 版本号</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">author</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">你的名字，这里指作者名称</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 感谢qq1586235767的提议，作者名称不能使用纯数字，否则会发生类型转换异常，您可以使用字符串避免这个问题</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">api</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0.9&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 早期nukkit api为1.0.0，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 目前大概为1.0.9</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">depend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;EconomyAPI&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 依赖的插件名称 添加后如果Plugins文件夹不存在添加的插件则关闭本插件</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">loadbefore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;EconomyAPI&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在xx插件之后加载 一般用作解决调用依赖库出现的ClassCastExpection</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">My first plugin</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 介绍</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">commands</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:                     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Commands指令列表 </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  fp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:                          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指令名称 不要加 / </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">   usage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/fp help&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           # 指令的用法 当onCommand返回false时 输出 usage内容</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">   description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;指令介绍&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 指令的介绍</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">   permission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">FirstPlugin.fp</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 指令权限 如果你希望插件仅允许 op执行 可以尝试这个</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">   aliases</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: []                 </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指令别名 可以增加中文名称</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">permissions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    FirstPlugin.fp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:             </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 权限名称</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          # 权限的介绍</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">op</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              # 权限限制 op / notop   notop为非op可执行 op 为仅限op执行</span></span></code></pre></div><ol start="3"><li>其他构成</li></ol><p>我们通过拆解PluginDescription类，可以知道</p><p>PluginDescription.java</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    private String name;</span></span>
<span class="line"><span>    private String main;</span></span>
<span class="line"><span>    private List&lt;String&gt; api;</span></span>
<span class="line"><span>    private List&lt;String&gt; depend = new ArrayList&lt;&gt;();</span></span>
<span class="line"><span>    private List&lt;String&gt; softDepend = new ArrayList&lt;&gt;();</span></span>
<span class="line"><span>    private List&lt;String&gt; loadBefore = new ArrayList&lt;&gt;();</span></span>
<span class="line"><span>    private String version;</span></span>
<span class="line"><span>    private Map&lt;String, Object&gt; commands = new HashMap&lt;&gt;();</span></span>
<span class="line"><span>    private String description;</span></span>
<span class="line"><span>    private final List&lt;String&gt; authors = new ArrayList&lt;&gt;();</span></span>
<span class="line"><span>    private String website;</span></span>
<span class="line"><span>    private String prefix;</span></span>
<span class="line"><span>    private PluginLoadOrder order = PluginLoadOrder.POSTWORLD;</span></span></code></pre></div><p>其中load属性分为POSTWORLD和STARTUP，他们区别官方在注释说明了</p><p>PluginLoadOrder.java</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/**</span></span>
<span class="line"><span>     * 表示这个插件在服务器启动时就开始加载。&lt;br&gt;</span></span>
<span class="line"><span>     * Indicates that the plugin will be loaded at startup.</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @see cn.nukkit.plugin.PluginLoadOrder</span></span>
<span class="line"><span>     * @since Nukkit 1.0 | Nukkit API 1.0.0</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    STARTUP,</span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * 表示这个插件在第一个世界加载完成后开始加载。&lt;br&gt;</span></span>
<span class="line"><span>     * Indicates that the plugin will be loaded after the first/default world was created.</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @see cn.nukkit.plugin.PluginLoadOrder</span></span>
<span class="line"><span>     * @since Nukkit 1.0 | Nukkit API 1.0.0</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    POSTWORLD</span></span></code></pre></div><p>config里有一个load,分别为STARUP与POSTWORLD,前者使插件加载在地图之前,后者为使插件加载在地图之后,如果对地图加载有需求的话，必须填写POSTWORLD,否则将无法获取level</p><p>您也可以添加自己的网站: website属性</p>`,17)])])}const E=i(l,[["render",t]]);export{o as __pageData,E as default};
